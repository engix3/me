// api/status.js
import { Client, GatewayIntentBits } from 'discord.js';

// –¢–≤–æ–π Discord ID
const YOUR_USER_ID = '1257675618175422576';

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ Discord (–±–µ–∑ –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç–∞ ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞)
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildPresences,
        GatewayIntentBits.GuildMembers
    ]
});

// –•—Ä–∞–Ω–∏–º —Å—Ç–∞—Ç—É—Å –≤ –ø–∞–º—è—Ç–∏ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ Redis –∏–ª–∏ —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏)
let currentStatus = 'offline';

// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
client.on('presenceUpdate', (oldPresence, newPresence) => {
    if (newPresence.userId === YOUR_USER_ID) {
        currentStatus = newPresence.status;
        console.log('üîÑ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω:', currentStatus);
    }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (—Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã)
if (!process.env.DISCORD_TOKEN) {
    console.error('‚ùå DISCORD_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
} else {
    client.login(process.env.DISCORD_TOKEN).catch(console.error);
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º Vercel Serverless Function
export default async function handler(req, res) {
    // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

    // –¢–æ–ª—å–∫–æ GET-–∑–∞–ø—Ä–æ—Å—ã
    if (req.method !== 'GET') {
        return res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' });
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    res.status(200).json({ status: currentStatus });
}
