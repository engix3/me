// /js/discordStatus.js

async function updateDiscordStatus() {
    try {
        const response = await fetch('/api/status'); // üëà –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç!
        const data = await response.json();
        const statusEl = document.getElementById('discordStatusIndicator');
        if (!statusEl) {
            console.warn('–≠–ª–µ–º–µ–Ω—Ç #discordStatusIndicator –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        const validStatuses = ['online', 'idle', 'dnd', 'offline'];
        const newStatus = validStatuses.includes(data.status) ? data.status : 'offline';

        // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è ‚Äî –∞–Ω–∏–º–∏—Ä—É–µ–º
        if (statusEl.dataset.currentStatus !== newStatus) {
            // –ü–ª–∞–≤–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º
            statusEl.style.opacity = '0';
            setTimeout(() => {
                // –ú–µ–Ω—è–µ–º –∫–ª–∞—Å—Å
                statusEl.className = 'discordStatus status-' + newStatus;
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
                statusEl.dataset.currentStatus = newStatus;
                // –ü–ª–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
                statusEl.style.opacity = '1';
            }, 150);
        }

        console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω:', newStatus);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
        const fallbackEl = document.getElementById('discordStatusIndicator');
        if (fallbackEl) {
            fallbackEl.className = 'discordStatus status-offline';
            fallbackEl.dataset.currentStatus = 'offline';
        }
    }
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    updateDiscordStatus();
    // –ò –∑–∞—Ç–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    setInterval(updateDiscordStatus, 30000);
});
